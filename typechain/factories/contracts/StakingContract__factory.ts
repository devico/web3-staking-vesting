/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  StakingContract,
  StakingContractInterface,
} from "../../contracts/StakingContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_depositToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_lockPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardPercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_stakingStartTime",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "InvalidReward",
    type: "error",
  },
  {
    inputs: [],
    name: "RewardsAlreadyClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "RewardsNotClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "StakingNotStarted",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "ClaimRewards",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "depositTime",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingStartTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "users",
    outputs: [
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastDepositTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001b9038038062001b9083398181016040528101906200003791906200026a565b620000576200004b620000f960201b60201c565b6200010160201b60201c565b84600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260038190555081600481905550806005819055505050505050620002f2565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001f782620001ca565b9050919050565b6200020981620001ea565b81146200021557600080fd5b50565b6000815190506200022981620001fe565b92915050565b6000819050919050565b62000244816200022f565b81146200025057600080fd5b50565b600081519050620002648162000239565b92915050565b600080600080600060a08688031215620002895762000288620001c5565b5b6000620002998882890162000218565b9550506020620002ac8882890162000218565b9450506040620002bf8882890162000253565b9350506060620002d28882890162000253565b9250506080620002e58882890162000253565b9150509295509295909350565b61188e80620003026000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b14610131578063a87430ba1461014f578063b6b55f2514610181578063c89039c51461019d578063f2fde38b146101bb578063f7c618c1146101d7576100b4565b8063372500ab146100b95780633ccfd60b146100c35780633fd8b02f146100cd57806352d472eb146100eb5780636abfd18314610109578063715018a614610127575b600080fd5b6100c16101f5565b005b6100cb61047c565b005b6100d56106c8565b6040516100e29190610f8a565b60405180910390f35b6100f36106ce565b6040516101009190610f8a565b60405180910390f35b6101116106d4565b60405161011e9190610f8a565b60405180910390f35b61012f6106da565b005b6101396106ee565b6040516101469190610fe6565b60405180910390f35b61016960048036038101906101649190611032565b610717565b6040516101789392919061107a565b60405180910390f35b61019b600480360381019061019691906110dd565b61074e565b005b6101a561095c565b6040516101b29190611169565b60405180910390f35b6101d560048036038101906101d09190611032565b610982565b005b6101df610a05565b6040516101ec9190611169565b60405180910390f35b60035461024d600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015442610a2b90919063ffffffff16565b101561028e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610285906111e1565b60405180910390fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615610315576040517faa6a15b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006103816064610373600454600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610a4190919063ffffffff16565b610a5790919063ffffffff16565b90506103d03382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610a6d9092919063ffffffff16565b6001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f1f89f96333d3133000ee447473151fa9606543368f02271c9d95ae14f13bcc67826040516104719190610f8a565b60405180910390a250565b6003546104d4600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015442610a2b90919063ffffffff16565b1015610515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050c906111e1565b60405180910390fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1661059b576040517f1085679b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506106773382600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610a6d9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364826040516106bd9190610f8a565b60405180910390a250565b60035481565b60045481565b60055481565b6106e2610af3565b6106ec6000610b71565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60066020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900460ff16905083565b600554421015610793576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078a9061124d565b60405180910390fd5b600081036107d857806040517f3728b83d0000000000000000000000000000000000000000000000000000000081526004016107cf9190610f8a565b60405180910390fd5b610827333083600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610c35909392919063ffffffff16565b61087c81600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610cbe90919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555042600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15824260405161095192919061126d565b60405180910390a250565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61098a610af3565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f090611308565b60405180910390fd5b610a0281610b71565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008183610a399190611357565b905092915050565b60008183610a4f919061138b565b905092915050565b60008183610a659190611414565b905092915050565b610aee8363a9059cbb60e01b8484604051602401610a8c929190611445565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610cd4565b505050565b610afb610d9c565b73ffffffffffffffffffffffffffffffffffffffff16610b196106ee565b73ffffffffffffffffffffffffffffffffffffffff1614610b6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b66906114ba565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610cb8846323b872dd60e01b858585604051602401610c56939291906114da565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610cd4565b50505050565b60008183610ccc9190611511565b905092915050565b6000610d36826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610da49092919063ffffffff16565b9050600081511480610d58575080806020019051810190610d579190611593565b5b610d97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8e90611632565b60405180910390fd5b505050565b600033905090565b6060610db38484600085610dbc565b90509392505050565b606082471015610e01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df8906116c4565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610e2a919061175e565b60006040518083038185875af1925050503d8060008114610e67576040519150601f19603f3d011682016040523d82523d6000602084013e610e6c565b606091505b5091509150610e7d87838387610e89565b92505050949350505050565b60608315610eeb576000835103610ee357610ea385610efe565b610ee2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed9906117c1565b60405180910390fd5b5b829050610ef6565b610ef58383610f21565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082511115610f345781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f689190611836565b60405180910390fd5b6000819050919050565b610f8481610f71565b82525050565b6000602082019050610f9f6000830184610f7b565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fd082610fa5565b9050919050565b610fe081610fc5565b82525050565b6000602082019050610ffb6000830184610fd7565b92915050565b600080fd5b61100f81610fc5565b811461101a57600080fd5b50565b60008135905061102c81611006565b92915050565b60006020828403121561104857611047611001565b5b60006110568482850161101d565b91505092915050565b60008115159050919050565b6110748161105f565b82525050565b600060608201905061108f6000830186610f7b565b61109c6020830185610f7b565b6110a9604083018461106b565b949350505050565b6110ba81610f71565b81146110c557600080fd5b50565b6000813590506110d7816110b1565b92915050565b6000602082840312156110f3576110f2611001565b5b6000611101848285016110c8565b91505092915050565b6000819050919050565b600061112f61112a61112584610fa5565b61110a565b610fa5565b9050919050565b600061114182611114565b9050919050565b600061115382611136565b9050919050565b61116381611148565b82525050565b600060208201905061117e600083018461115a565b92915050565b600082825260208201905092915050565b7f4c6f636b20706572696f64206e6f7420656c6170736564000000000000000000600082015250565b60006111cb601783611184565b91506111d682611195565b602082019050919050565b600060208201905081810360008301526111fa816111be565b9050919050565b7f5374616b696e67206e6f74207374617274656400000000000000000000000000600082015250565b6000611237601383611184565b915061124282611201565b602082019050919050565b600060208201905081810360008301526112668161122a565b9050919050565b60006040820190506112826000830185610f7b565b61128f6020830184610f7b565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006112f2602683611184565b91506112fd82611296565b604082019050919050565b60006020820190508181036000830152611321816112e5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061136282610f71565b915061136d83610f71565b9250828210156113805761137f611328565b5b828203905092915050565b600061139682610f71565b91506113a183610f71565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156113da576113d9611328565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061141f82610f71565b915061142a83610f71565b92508261143a576114396113e5565b5b828204905092915050565b600060408201905061145a6000830185610fd7565b6114676020830184610f7b565b9392505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006114a4602083611184565b91506114af8261146e565b602082019050919050565b600060208201905081810360008301526114d381611497565b9050919050565b60006060820190506114ef6000830186610fd7565b6114fc6020830185610fd7565b6115096040830184610f7b565b949350505050565b600061151c82610f71565b915061152783610f71565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561155c5761155b611328565b5b828201905092915050565b6115708161105f565b811461157b57600080fd5b50565b60008151905061158d81611567565b92915050565b6000602082840312156115a9576115a8611001565b5b60006115b78482850161157e565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b600061161c602a83611184565b9150611627826115c0565b604082019050919050565b6000602082019050818103600083015261164b8161160f565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006116ae602683611184565b91506116b982611652565b604082019050919050565b600060208201905081810360008301526116dd816116a1565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156117185780820151818401526020810190506116fd565b83811115611727576000848401525b50505050565b6000611738826116e4565b61174281856116ef565b93506117528185602086016116fa565b80840191505092915050565b600061176a828461172d565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006117ab601d83611184565b91506117b682611775565b602082019050919050565b600060208201905081810360008301526117da8161179e565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b6000611808826117e1565b6118128185611184565b93506118228185602086016116fa565b61182b816117ec565b840191505092915050565b6000602082019050818103600083015261185081846117fd565b90509291505056fea2646970667358221220ce4f2b8508a68c167443df989cc0540c4b70d7d970abf2a915a2286b798b670364736f6c634300080f0033";

type StakingContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakingContract__factory extends ContractFactory {
  constructor(...args: StakingContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _depositToken: PromiseOrValue<string>,
    _rewardToken: PromiseOrValue<string>,
    _lockPeriod: PromiseOrValue<BigNumberish>,
    _rewardPercentage: PromiseOrValue<BigNumberish>,
    _stakingStartTime: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StakingContract> {
    return super.deploy(
      _depositToken,
      _rewardToken,
      _lockPeriod,
      _rewardPercentage,
      _stakingStartTime,
      overrides || {}
    ) as Promise<StakingContract>;
  }
  override getDeployTransaction(
    _depositToken: PromiseOrValue<string>,
    _rewardToken: PromiseOrValue<string>,
    _lockPeriod: PromiseOrValue<BigNumberish>,
    _rewardPercentage: PromiseOrValue<BigNumberish>,
    _stakingStartTime: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _depositToken,
      _rewardToken,
      _lockPeriod,
      _rewardPercentage,
      _stakingStartTime,
      overrides || {}
    );
  }
  override attach(address: string): StakingContract {
    return super.attach(address) as StakingContract;
  }
  override connect(signer: Signer): StakingContract__factory {
    return super.connect(signer) as StakingContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingContractInterface {
    return new utils.Interface(_abi) as StakingContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingContract {
    return new Contract(address, _abi, signerOrProvider) as StakingContract;
  }
}
