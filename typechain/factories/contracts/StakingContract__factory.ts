/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  StakingContract,
  StakingContractInterface,
} from "../../contracts/StakingContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_depositToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_lockPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardPercentage",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "InvalidReward",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "ClaimRewards",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "depositTime",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastDepositTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200198838038062001988833981810160405281019062000037919062000262565b620000576200004b620000f160201b60201c565b620000f960201b60201c565b83600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816003819055508060048190555050505050620002d4565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001ef82620001c2565b9050919050565b6200020181620001e2565b81146200020d57600080fd5b50565b6000815190506200022181620001f6565b92915050565b6000819050919050565b6200023c8162000227565b81146200024857600080fd5b50565b6000815190506200025c8162000231565b92915050565b600080600080608085870312156200027f576200027e620001bd565b5b60006200028f8782880162000210565b9450506020620002a28782880162000210565b9350506040620002b5878288016200024b565b9250506060620002c8878288016200024b565b91505092959194509250565b6116a480620002e46000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b14610143578063b6b55f2514610161578063c89039c51461017d578063f2fde38b1461019b578063f7c618c1146101b7578063fc7e286d146101d5576100b4565b806302527753146100b9578063372500ab146100e95780633ccfd60b146100f35780633fd8b02f146100fd57806352d472eb1461011b578063715018a614610139575b600080fd5b6100d360048036038101906100ce9190610e9c565b610205565b6040516100e09190610ee2565b60405180910390f35b6100f161021d565b005b6100fb610401565b005b610105610603565b6040516101129190610ee2565b60405180910390f35b610123610609565b6040516101309190610ee2565b60405180910390f35b61014161060f565b005b61014b610623565b6040516101589190610f0c565b60405180910390f35b61017b60048036038101906101769190610f53565b61064c565b005b61018561080c565b6040516101929190610fdf565b60405180910390f35b6101b560048036038101906101b09190610e9c565b610832565b005b6101bf6108b5565b6040516101cc9190610fdf565b60405180910390f35b6101ef60048036038101906101ea9190610e9c565b6108db565b6040516101fc9190610ee2565b60405180910390f35b60066020528060005260406000206000915090505481565b600354610272600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054426108f390919063ffffffff16565b10156102b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102aa90611057565b60405180910390fd5b600061031c606461030e600454600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461090990919063ffffffff16565b61091f90919063ffffffff16565b90506000810361036357806040517fd3ea9c4800000000000000000000000000000000000000000000000000000000815260040161035a9190610ee2565b60405180910390fd5b6103b03382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166109359092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f1f89f96333d3133000ee447473151fa9606543368f02271c9d95ae14f13bcc67826040516103f69190610ee2565b60405180910390a250565b600354610456600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054426108f390919063ffffffff16565b1015610497576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048e90611057565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000810361052057806040517f3728b83d0000000000000000000000000000000000000000000000000000000081526004016105179190610ee2565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506105b23382600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166109359092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364826040516105f89190610ee2565b60405180910390a250565b60035481565b60045481565b6106176109bb565b6106216000610a39565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000810361069157806040517f3728b83d0000000000000000000000000000000000000000000000000000000081526004016106889190610ee2565b60405180910390fd5b6106e0333083600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610afd909392919063ffffffff16565b61073281600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b8690919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a158242604051610801929190611077565b60405180910390a250565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61083a6109bb565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a090611112565b60405180910390fd5b6108b281610a39565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60056020528060005260406000206000915090505481565b600081836109019190611161565b905092915050565b600081836109179190611195565b905092915050565b6000818361092d919061121e565b905092915050565b6109b68363a9059cbb60e01b848460405160240161095492919061124f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610b9c565b505050565b6109c3610c64565b73ffffffffffffffffffffffffffffffffffffffff166109e1610623565b73ffffffffffffffffffffffffffffffffffffffff1614610a37576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2e906112c4565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610b80846323b872dd60e01b858585604051602401610b1e939291906112e4565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610b9c565b50505050565b60008183610b94919061131b565b905092915050565b6000610bfe826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610c6c9092919063ffffffff16565b9050600081511480610c20575080806020019051810190610c1f91906113a9565b5b610c5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5690611448565b60405180910390fd5b505050565b600033905090565b6060610c7b8484600085610c84565b90509392505050565b606082471015610cc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc0906114da565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610cf29190611574565b60006040518083038185875af1925050503d8060008114610d2f576040519150601f19603f3d011682016040523d82523d6000602084013e610d34565b606091505b5091509150610d4587838387610d51565b92505050949350505050565b60608315610db3576000835103610dab57610d6b85610dc6565b610daa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da1906115d7565b60405180910390fd5b5b829050610dbe565b610dbd8383610de9565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082511115610dfc5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e30919061164c565b60405180910390fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e6982610e3e565b9050919050565b610e7981610e5e565b8114610e8457600080fd5b50565b600081359050610e9681610e70565b92915050565b600060208284031215610eb257610eb1610e39565b5b6000610ec084828501610e87565b91505092915050565b6000819050919050565b610edc81610ec9565b82525050565b6000602082019050610ef76000830184610ed3565b92915050565b610f0681610e5e565b82525050565b6000602082019050610f216000830184610efd565b92915050565b610f3081610ec9565b8114610f3b57600080fd5b50565b600081359050610f4d81610f27565b92915050565b600060208284031215610f6957610f68610e39565b5b6000610f7784828501610f3e565b91505092915050565b6000819050919050565b6000610fa5610fa0610f9b84610e3e565b610f80565b610e3e565b9050919050565b6000610fb782610f8a565b9050919050565b6000610fc982610fac565b9050919050565b610fd981610fbe565b82525050565b6000602082019050610ff46000830184610fd0565b92915050565b600082825260208201905092915050565b7f4c6f636b20706572696f64206e6f7420656c6170736564000000000000000000600082015250565b6000611041601783610ffa565b915061104c8261100b565b602082019050919050565b6000602082019050818103600083015261107081611034565b9050919050565b600060408201905061108c6000830185610ed3565b6110996020830184610ed3565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006110fc602683610ffa565b9150611107826110a0565b604082019050919050565b6000602082019050818103600083015261112b816110ef565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061116c82610ec9565b915061117783610ec9565b92508282101561118a57611189611132565b5b828203905092915050565b60006111a082610ec9565b91506111ab83610ec9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156111e4576111e3611132565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061122982610ec9565b915061123483610ec9565b925082611244576112436111ef565b5b828204905092915050565b60006040820190506112646000830185610efd565b6112716020830184610ed3565b9392505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006112ae602083610ffa565b91506112b982611278565b602082019050919050565b600060208201905081810360008301526112dd816112a1565b9050919050565b60006060820190506112f96000830186610efd565b6113066020830185610efd565b6113136040830184610ed3565b949350505050565b600061132682610ec9565b915061133183610ec9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561136657611365611132565b5b828201905092915050565b60008115159050919050565b61138681611371565b811461139157600080fd5b50565b6000815190506113a38161137d565b92915050565b6000602082840312156113bf576113be610e39565b5b60006113cd84828501611394565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611432602a83610ffa565b915061143d826113d6565b604082019050919050565b6000602082019050818103600083015261146181611425565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006114c4602683610ffa565b91506114cf82611468565b604082019050919050565b600060208201905081810360008301526114f3816114b7565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561152e578082015181840152602081019050611513565b8381111561153d576000848401525b50505050565b600061154e826114fa565b6115588185611505565b9350611568818560208601611510565b80840191505092915050565b60006115808284611543565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006115c1601d83610ffa565b91506115cc8261158b565b602082019050919050565b600060208201905081810360008301526115f0816115b4565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b600061161e826115f7565b6116288185610ffa565b9350611638818560208601611510565b61164181611602565b840191505092915050565b600060208201905081810360008301526116668184611613565b90509291505056fea26469706673582212209dce8d4ff9f533395a531567195c8d166eade2fc586655c50ac45bfdc860879264736f6c634300080f0033";

type StakingContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakingContract__factory extends ContractFactory {
  constructor(...args: StakingContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _depositToken: PromiseOrValue<string>,
    _rewardToken: PromiseOrValue<string>,
    _lockPeriod: PromiseOrValue<BigNumberish>,
    _rewardPercentage: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StakingContract> {
    return super.deploy(
      _depositToken,
      _rewardToken,
      _lockPeriod,
      _rewardPercentage,
      overrides || {}
    ) as Promise<StakingContract>;
  }
  override getDeployTransaction(
    _depositToken: PromiseOrValue<string>,
    _rewardToken: PromiseOrValue<string>,
    _lockPeriod: PromiseOrValue<BigNumberish>,
    _rewardPercentage: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _depositToken,
      _rewardToken,
      _lockPeriod,
      _rewardPercentage,
      overrides || {}
    );
  }
  override attach(address: string): StakingContract {
    return super.attach(address) as StakingContract;
  }
  override connect(signer: Signer): StakingContract__factory {
    return super.connect(signer) as StakingContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingContractInterface {
    return new utils.Interface(_abi) as StakingContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingContract {
    return new Contract(address, _abi, signerOrProvider) as StakingContract;
  }
}
