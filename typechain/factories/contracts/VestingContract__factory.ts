/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  VestingContract,
  VestingContractInterface,
} from "../../contracts/VestingContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endTime",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DistributedRights",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensWithdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "distributeRights",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getAvailableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastUnlockedStage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rights",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "unlockStages",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526040518060800160405280600a60ff168152602001601e60ff168152602001603260ff168152602001606460ff16815250600490600462000047929190620001bf565b503480156200005557600080fd5b50604051620014793803806200147983398181016040528101906200007b9190620002da565b6200009b6200008f620000f360201b60201c565b620000fb60201b60201c565b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816002819055508060038190555050505062000336565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b82805482825590600052602060002090810192821562000203579160200282015b8281111562000202578251829060ff16905591602001919060010190620001e0565b5b50905062000212919062000216565b5090565b5b808211156200023157600081600090555060010162000217565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000267826200023a565b9050919050565b62000279816200025a565b81146200028557600080fd5b50565b60008151905062000299816200026e565b92915050565b6000819050919050565b620002b4816200029f565b8114620002c057600080fd5b50565b600081519050620002d481620002a9565b92915050565b600080600060608486031215620002f657620002f562000235565b5b6000620003068682870162000288565b93505060206200031986828701620002c3565b92505060406200032c86828701620002c3565b9150509250925092565b61113380620003466000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806378e979251161007157806378e979251461018d5780638d8f2adb146101ab5780638da5cb5b146101b5578063e62c8edf146101d3578063f2fde38b14610203578063fc0c546a1461021f576100b4565b80631f3a71ba146100b95780633197cbb6146100e957806341e66612146101075780636214feed14610137578063715018a61461016757806374a56e1f14610171575b600080fd5b6100d360048036038101906100ce91906109aa565b61023d565b6040516100e091906109f0565b60405180910390f35b6100f1610326565b6040516100fe91906109f0565b60405180910390f35b610121600480360381019061011c9190610a37565b61032c565b60405161012e91906109f0565b60405180910390f35b610151600480360381019061014c91906109aa565b610350565b60405161015e91906109f0565b60405180910390f35b61016f610368565b005b61018b60048036038101906101869190610a64565b61037c565b005b610195610531565b6040516101a291906109f0565b60405180910390f35b6101b3610537565b005b6101bd610713565b6040516101ca9190610ab3565b60405180910390f35b6101ed60048036038101906101e891906109aa565b61073c565b6040516101fa91906109f0565b60405180910390f35b61021d600480360381019061021891906109aa565b610754565b005b6102276107d7565b6040516102349190610b2d565b60405180910390f35b6000806000905060005b6004805490508110156102c05762278d006001826102659190610b77565b61026f9190610bab565b60025461027c9190610b77565b42106102a8576004818154811061029657610295610bed565b5b906000526020600020015491506102ad565b6102c0565b80806102b890610c1c565b915050610247565b506000606482600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103109190610bab565b61031a9190610c93565b90508092505050919050565b60035481565b6004818154811061033c57600080fd5b906000526020600020016000915090505481565b60056020528060005260406000206000915090505481565b6103706107fd565b61037a600061087b565b565b6103846107fd565b600254421015801561039857506003544211155b6103d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ce90610d21565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610446576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043d90610d8d565b60405180910390fd5b60008111610489576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048090610df9565b60405180910390fd5b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104d89190610b77565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167f27a12e29bf4284c59765ed5553d4054d4fe3e30e97b2fb0ca75bd9e5221ec5ec8260405161052591906109f0565b60405180910390a25050565b60025481565b600354421161057b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290610e8b565b60405180910390fd5b60006105863361023d565b9050600081116105cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c290610f1d565b60405180910390fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461061a9190610f3d565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161067e929190610f71565b6020604051808303816000875af115801561069d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c19190610fd2565b503373ffffffffffffffffffffffffffffffffffffffff167f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b8260405161070891906109f0565b60405180910390a250565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60066020528060005260406000206000915090505481565b61075c6107fd565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c290611071565b60405180910390fd5b6107d48161087b565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61080561093f565b73ffffffffffffffffffffffffffffffffffffffff16610823610713565b73ffffffffffffffffffffffffffffffffffffffff1614610879576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610870906110dd565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109778261094c565b9050919050565b6109878161096c565b811461099257600080fd5b50565b6000813590506109a48161097e565b92915050565b6000602082840312156109c0576109bf610947565b5b60006109ce84828501610995565b91505092915050565b6000819050919050565b6109ea816109d7565b82525050565b6000602082019050610a0560008301846109e1565b92915050565b610a14816109d7565b8114610a1f57600080fd5b50565b600081359050610a3181610a0b565b92915050565b600060208284031215610a4d57610a4c610947565b5b6000610a5b84828501610a22565b91505092915050565b60008060408385031215610a7b57610a7a610947565b5b6000610a8985828601610995565b9250506020610a9a85828601610a22565b9150509250929050565b610aad8161096c565b82525050565b6000602082019050610ac86000830184610aa4565b92915050565b6000819050919050565b6000610af3610aee610ae98461094c565b610ace565b61094c565b9050919050565b6000610b0582610ad8565b9050919050565b6000610b1782610afa565b9050919050565b610b2781610b0c565b82525050565b6000602082019050610b426000830184610b1e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b82826109d7565b9150610b8d836109d7565b9250828201905080821115610ba557610ba4610b48565b5b92915050565b6000610bb6826109d7565b9150610bc1836109d7565b9250828202610bcf816109d7565b91508282048414831517610be657610be5610b48565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610c27826109d7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c5957610c58610b48565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c9e826109d7565b9150610ca9836109d7565b925082610cb957610cb8610c64565b5b828204905092915050565b600082825260208201905092915050565b7f446973747269627574696f6e207068617365206973206f766572000000000000600082015250565b6000610d0b601a83610cc4565b9150610d1682610cd5565b602082019050919050565b60006020820190508181036000830152610d3a81610cfe565b9050919050565b7f496e76616c696420616464726573730000000000000000000000000000000000600082015250565b6000610d77600f83610cc4565b9150610d8282610d41565b602082019050919050565b60006020820190508181036000830152610da681610d6a565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e2030000000600082015250565b6000610de3601d83610cc4565b9150610dee82610dad565b602082019050919050565b60006020820190508181036000830152610e1281610dd6565b9050919050565b7f446973747269627574696f6e207068617365206973206e6f74206f766572207960008201527f6574000000000000000000000000000000000000000000000000000000000000602082015250565b6000610e75602283610cc4565b9150610e8082610e19565b604082019050919050565b60006020820190508181036000830152610ea481610e68565b9050919050565b7f4e6f20746f6b656e7320617661696c61626c6520666f7220776974686472617760008201527f616c000000000000000000000000000000000000000000000000000000000000602082015250565b6000610f07602283610cc4565b9150610f1282610eab565b604082019050919050565b60006020820190508181036000830152610f3681610efa565b9050919050565b6000610f48826109d7565b9150610f53836109d7565b9250828203905081811115610f6b57610f6a610b48565b5b92915050565b6000604082019050610f866000830185610aa4565b610f9360208301846109e1565b9392505050565b60008115159050919050565b610faf81610f9a565b8114610fba57600080fd5b50565b600081519050610fcc81610fa6565b92915050565b600060208284031215610fe857610fe7610947565b5b6000610ff684828501610fbd565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061105b602683610cc4565b915061106682610fff565b604082019050919050565b6000602082019050818103600083015261108a8161104e565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006110c7602083610cc4565b91506110d282611091565b602082019050919050565b600060208201905081810360008301526110f6816110ba565b905091905056fea26469706673582212209a0d5fcdce036741513444e90770050a966a7af3e1d8dde39ce5e9a44dd41b1664736f6c63430008140033";

type VestingContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VestingContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VestingContract__factory extends ContractFactory {
  constructor(...args: VestingContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    _startTime: PromiseOrValue<BigNumberish>,
    _endTime: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VestingContract> {
    return super.deploy(
      _token,
      _startTime,
      _endTime,
      overrides || {}
    ) as Promise<VestingContract>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    _startTime: PromiseOrValue<BigNumberish>,
    _endTime: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _token,
      _startTime,
      _endTime,
      overrides || {}
    );
  }
  override attach(address: string): VestingContract {
    return super.attach(address) as VestingContract;
  }
  override connect(signer: Signer): VestingContract__factory {
    return super.connect(signer) as VestingContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VestingContractInterface {
    return new utils.Interface(_abi) as VestingContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VestingContract {
    return new Contract(address, _abi, signerOrProvider) as VestingContract;
  }
}
