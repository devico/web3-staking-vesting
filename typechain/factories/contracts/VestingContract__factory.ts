/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  VestingContract,
  VestingContractInterface,
} from "../../contracts/VestingContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endTime",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DistributionNotOver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "availableAmount",
        type: "uint256",
      },
    ],
    name: "InvalidAvailableAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "remainingAmount",
        type: "uint256",
      },
    ],
    name: "InvalidRemainingAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DistributedRights",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensWithdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "distributeRights",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getAvailableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastUnlockedStage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rights",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "unlockStages",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526040518060800160405280600a60ff168152602001601e60ff168152602001603260ff168152602001606460ff16815250600490600462000047929190620001bf565b503480156200005557600080fd5b50604051620013643803806200136483398181016040528101906200007b9190620002da565b6200009b6200008f620000f360201b60201c565b620000fb60201b60201c565b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816002819055508060038190555050505062000336565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b82805482825590600052602060002090810192821562000203579160200282015b8281111562000202578251829060ff16905591602001919060010190620001e0565b5b50905062000212919062000216565b5090565b5b808211156200023157600081600090555060010162000217565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000267826200023a565b9050919050565b62000279816200025a565b81146200028557600080fd5b50565b60008151905062000299816200026e565b92915050565b6000819050919050565b620002b4816200029f565b8114620002c057600080fd5b50565b600081519050620002d481620002a9565b92915050565b600080600060608486031215620002f657620002f562000235565b5b6000620003068682870162000288565b93505060206200031986828701620002c3565b92505060406200032c86828701620002c3565b9150509250925092565b61101e80620003466000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806378e979251161007157806378e979251461018d5780638d8f2adb146101ab5780638da5cb5b146101b5578063e62c8edf146101d3578063f2fde38b14610203578063fc0c546a1461021f576100b4565b80631f3a71ba146100b95780633197cbb6146100e957806341e66612146101075780636214feed14610137578063715018a61461016757806374a56e1f14610171575b600080fd5b6100d360048036038101906100ce9190610a91565b61023d565b6040516100e09190610ad7565b60405180910390f35b6100f1610387565b6040516100fe9190610ad7565b60405180910390f35b610121600480360381019061011c9190610b1e565b61038d565b60405161012e9190610ad7565b60405180910390f35b610151600480360381019061014c9190610a91565b6103b1565b60405161015e9190610ad7565b60405180910390f35b61016f6103c9565b005b61018b60048036038101906101869190610b4b565b6103dd565b005b61019561058b565b6040516101a29190610ad7565b60405180910390f35b6101b3610591565b005b6101bd6107fa565b6040516101ca9190610b9a565b60405180910390f35b6101ed60048036038101906101e89190610a91565b610823565b6040516101fa9190610ad7565b60405180910390f35b61021d60048036038101906102189190610a91565b61083b565b005b6102276108be565b6040516102349190610c14565b60405180910390f35b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102a4576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805b6004805490508110156103215762278d006001826102c69190610c5e565b6102d09190610c92565b6002546102dd9190610c5e565b421061030957600481815481106102f7576102f6610cd4565b5b9060005260206000200154915061030e565b610321565b808061031990610d03565b9150506102a8565b506000606482600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103719190610c92565b61037b9190610d7a565b90508092505050919050565b60035481565b6004818154811061039d57600080fd5b906000526020600020016000915090505481565b60056020528060005260406000206000915090505481565b6103d16108e4565b6103db6000610962565b565b6103e56108e4565b60025442101580156103f957506003544211155b610438576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042f90610e08565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361049e576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081036104e357806040517f3728b83d0000000000000000000000000000000000000000000000000000000081526004016104da9190610ad7565b60405180910390fd5b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105329190610c5e565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167f27a12e29bf4284c59765ed5553d4054d4fe3e30e97b2fb0ca75bd9e5221ec5ec8260405161057f9190610ad7565b60405180910390a25050565b60025481565b6003544210156105cd576040517fb0026d9e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006105d83361023d565b90506000810361061e57806040517e4b7cfd0000000000000000000000000000000000000000000000000000000081526004016106159190610ad7565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548261066b9190610e28565b905081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107009190610e28565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610764929190610e5c565b6020604051808303816000875af1158015610783573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a79190610ebd565b503373ffffffffffffffffffffffffffffffffffffffff167f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b826040516107ee9190610ad7565b60405180910390a25050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60066020528060005260406000206000915090505481565b6108436108e4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a990610f5c565b60405180910390fd5b6108bb81610962565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6108ec610a26565b73ffffffffffffffffffffffffffffffffffffffff1661090a6107fa565b73ffffffffffffffffffffffffffffffffffffffff1614610960576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095790610fc8565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a5e82610a33565b9050919050565b610a6e81610a53565b8114610a7957600080fd5b50565b600081359050610a8b81610a65565b92915050565b600060208284031215610aa757610aa6610a2e565b5b6000610ab584828501610a7c565b91505092915050565b6000819050919050565b610ad181610abe565b82525050565b6000602082019050610aec6000830184610ac8565b92915050565b610afb81610abe565b8114610b0657600080fd5b50565b600081359050610b1881610af2565b92915050565b600060208284031215610b3457610b33610a2e565b5b6000610b4284828501610b09565b91505092915050565b60008060408385031215610b6257610b61610a2e565b5b6000610b7085828601610a7c565b9250506020610b8185828601610b09565b9150509250929050565b610b9481610a53565b82525050565b6000602082019050610baf6000830184610b8b565b92915050565b6000819050919050565b6000610bda610bd5610bd084610a33565b610bb5565b610a33565b9050919050565b6000610bec82610bbf565b9050919050565b6000610bfe82610be1565b9050919050565b610c0e81610bf3565b82525050565b6000602082019050610c296000830184610c05565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c6982610abe565b9150610c7483610abe565b9250828201905080821115610c8c57610c8b610c2f565b5b92915050565b6000610c9d82610abe565b9150610ca883610abe565b9250828202610cb681610abe565b91508282048414831517610ccd57610ccc610c2f565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d0e82610abe565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d4057610d3f610c2f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d8582610abe565b9150610d9083610abe565b925082610da057610d9f610d4b565b5b828204905092915050565b600082825260208201905092915050565b7f446973747269627574696f6e207068617365206973206f766572000000000000600082015250565b6000610df2601a83610dab565b9150610dfd82610dbc565b602082019050919050565b60006020820190508181036000830152610e2181610de5565b9050919050565b6000610e3382610abe565b9150610e3e83610abe565b9250828203905081811115610e5657610e55610c2f565b5b92915050565b6000604082019050610e716000830185610b8b565b610e7e6020830184610ac8565b9392505050565b60008115159050919050565b610e9a81610e85565b8114610ea557600080fd5b50565b600081519050610eb781610e91565b92915050565b600060208284031215610ed357610ed2610a2e565b5b6000610ee184828501610ea8565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610f46602683610dab565b9150610f5182610eea565b604082019050919050565b60006020820190508181036000830152610f7581610f39565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610fb2602083610dab565b9150610fbd82610f7c565b602082019050919050565b60006020820190508181036000830152610fe181610fa5565b905091905056fea2646970667358221220011b4b6e2d01a0b65e2f43eb03bef5cc1ea682c0e5555ee7442e4ee295082c7964736f6c63430008140033";

type VestingContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VestingContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VestingContract__factory extends ContractFactory {
  constructor(...args: VestingContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    _startTime: PromiseOrValue<BigNumberish>,
    _endTime: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VestingContract> {
    return super.deploy(
      _token,
      _startTime,
      _endTime,
      overrides || {}
    ) as Promise<VestingContract>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    _startTime: PromiseOrValue<BigNumberish>,
    _endTime: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _token,
      _startTime,
      _endTime,
      overrides || {}
    );
  }
  override attach(address: string): VestingContract {
    return super.attach(address) as VestingContract;
  }
  override connect(signer: Signer): VestingContract__factory {
    return super.connect(signer) as VestingContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VestingContractInterface {
    return new utils.Interface(_abi) as VestingContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VestingContract {
    return new Contract(address, _abi, signerOrProvider) as VestingContract;
  }
}
